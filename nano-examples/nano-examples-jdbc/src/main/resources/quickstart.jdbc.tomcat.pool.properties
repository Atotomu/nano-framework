JDBC.environment.id=quickstart

JDBC.pool.type=TOMCAT_JDBC_POOL
JDBC.driver=org.h2.Driver
JDBC.url=jdbc:h2:~/test
JDBC.username=test
JDBC.password=test
JDBC.autoCommit=false

#######################################################################################
#################        Tomcat Jdbc连接池配置        ###################################
#######################################################################################

# (int) The initial number of connections that are created when the pool is started. 
# Default value is 10
tomcat.jdbc.pool.initialSize=1

# (int) The minimum number of established connections that should be kept in the pool at all times. 
# The connection pool can shrink below this number if validation queries fail. 
# Default value is derived from initialSize:10 (also see testWhileIdle)
tomcat.jdbc.pool.minIdle=1

# (int) The maximum number of milliseconds that the pool will wait (when there are no available connections) for a connection to be returned before throwing an exception. 
# Default value is 30000 (30 seconds)
tomcat.jdbc.pool.maxWait=30000

# (int) The maximum number of active connections that can be allocated from this pool at the same time. 
# The default value is 100
tomcat.jdbc.pool.maxActive=5

# (boolean) The indication of whether objects will be validated by the idle object evictor (if any). 
# If an object fails to validate, it will be dropped from the pool. 
# NOTE - for a true value to have any effect, the validationQuery or validatorClassName parameter must be set to a non-null string. 
# The default value is false and this property has to be set in order for the pool cleaner/test thread is to run (also see timeBetweenEvictionRunsMillis)
tomcat.jdbc.pool.testWhileIdle=true

# (boolean) The indication of whether objects will be validated before being borrowed from the pool. 
# If the object fails to validate, it will be dropped from the pool, and we will attempt to borrow another. 
# NOTE - for a true value to have any effect, the validationQuery or validatorClassName parameter must be set to a non-null string. 
# In order to have a more efficient validation, see validationInterval. Default value is false
tomcat.jdbc.pool.testOnBorrow=false

# (String) The SQL query that will be used to validate connections from this pool before returning them to the caller. 
# If specified, this query does not have to return any data, it just can't throw a SQLException. 
# The default value is null. Example values are SELECT 1(mysql), select 1 from dual(oracle), SELECT 1(MS Sql Server)
tomcat.jdbc.pool.validationQuery=select 1

# (boolean) The indication of whether objects will be validated before being returned to the pool. 
# NOTE - for a true value to have any effect, the validationQuery or validatorClassName parameter must be set to a non-null string. 
# The default value is false.
tomcat.jdbc.pool.testOnReturn=false

# (long) avoid excess validation, only run validation at most at this frequency - time in milliseconds. 
# If a connection is due for validation, but has been validated previously within this interval, it will not be validated again. 
# The default value is 30000 (30 seconds).
tomcat.jdbc.pool.validationInterval=30000

# (int) The number of milliseconds to sleep between runs of the idle connection validation/cleaner thread. 
# This value should not be set under 1 second. It dictates how often we check for idle, abandoned connections, and how often we validate idle connections. 
# The default value is 5000 (5 seconds). 
tomcat.jdbc.pool.timeBetweenEvictionRunsMillis=5000

# (boolean) Flag to log stack traces for application code which abandoned a Connection. 
# Logging of abandoned Connections adds overhead for every Connection borrow because a stack trace has to be generated. 
# The default value is false.
tomcat.jdbc.pool.logAbandoned=false

# (boolean) Flag to remove abandoned connections if they exceed the removeAbandonedTimeout. 
# If set to true a connection is considered abandoned and eligible for removal if it has been in use longer than the removeAbandonedTimeout 
# Setting this to true can recover db connections from applications that fail to close a connection. 
# See also logAbandoned The default value is false.
tomcat.jdbc.pool.removeAbandoned=false

# (int) Timeout in seconds before an abandoned(in use) connection can be removed. 
# The default value is 60 (60 seconds). 
# The value should be set to the longest running query your applications might have.
tomcat.jdbc.pool.removeAbandonedTimeout=60

# (int) The minimum amount of time an object may sit idle in the pool before it is eligible for eviction. 
# The default value is 60000 (60 seconds).
tomcat.jdbc.pool.minEvictableIdleTimeMillis=60000

# (String) A semicolon separated list of classnames extending org.apache.tomcat.jdbc.pool.JdbcInterceptor class. 
# See Configuring JDBC interceptors below for more detailed description of syntaz and examples.
#
# These interceptors will be inserted as an interceptor into the chain of operations on a java.sql.Connection object. The default value is null.
# 
# Predefined interceptors:
# org.apache.tomcat.jdbc.pool.interceptor.
# ConnectionState - keeps track of auto commit, read only, catalog and transaction isolation level.
# org.apache.tomcat.jdbc.pool.interceptor.
# StatementFinalizer - keeps track of opened statements, and closes them when the connection is returned to the pool.
# 
# More predefined interceptors are described in detail in the JDBC Interceptors section.
# tomcat.jdbc.pool.jdbcInterceptors=

# (boolean) Register the pool with JMX or not. 
# The default value is true.
tomcat.jdbc.pool.jmxEnabled=true